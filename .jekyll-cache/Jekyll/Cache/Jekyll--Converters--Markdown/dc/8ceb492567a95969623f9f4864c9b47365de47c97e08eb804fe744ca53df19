I"o<h2 id="2020카카오-인턴십-보석-쇼핑">2020카카오 인턴십 보석 쇼핑</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">q</span><span class="o">=</span><span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;&gt;();</span>
    <span class="nc">HashSet</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">hs</span><span class="o">=</span><span class="k">new</span> <span class="nc">HashSet</span><span class="o">&lt;&gt;();</span>
    <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">hm</span><span class="o">=</span><span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
    <span class="kt">int</span> <span class="n">startPoint</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">length</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">MAX_VALUE</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">gems</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="o">{};</span>
        <span class="kt">int</span> <span class="n">start</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="nl">gem:</span><span class="n">gems</span><span class="o">){</span>
            <span class="n">hs</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">gem</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="nl">gem:</span><span class="n">gems</span><span class="o">){</span>
            <span class="n">q</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">gem</span><span class="o">);</span>
            <span class="k">if</span><span class="o">(!</span><span class="n">hm</span><span class="o">.</span><span class="na">containsKey</span><span class="o">(</span><span class="n">gem</span><span class="o">)){</span>
                <span class="n">hm</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">gem</span><span class="o">,</span><span class="mi">1</span><span class="o">);</span>
            <span class="o">}</span><span class="k">else</span><span class="o">{</span>
                <span class="n">hm</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">gem</span><span class="o">,</span><span class="n">hm</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">gem</span><span class="o">)+</span><span class="mi">1</span><span class="o">);</span>
            <span class="o">}</span>
            
            <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">){</span>
                <span class="nc">String</span> <span class="n">temp</span><span class="o">=</span><span class="n">q</span><span class="o">.</span><span class="na">peek</span><span class="o">();</span>
                <span class="k">if</span><span class="o">(</span><span class="n">hm</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">temp</span><span class="o">)&gt;</span><span class="mi">1</span><span class="o">){</span>
                    <span class="n">hm</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">temp</span><span class="o">,</span><span class="n">hm</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">temp</span><span class="o">)-</span><span class="mi">1</span><span class="o">);</span>
                    <span class="n">q</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
                    <span class="n">startPoint</span><span class="o">++;</span>
                <span class="o">}</span><span class="k">else</span><span class="o">{</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            
            
            <span class="k">if</span><span class="o">(</span><span class="n">hs</span><span class="o">.</span><span class="na">size</span><span class="o">()==</span><span class="n">hm</span><span class="o">.</span><span class="na">size</span><span class="o">()&amp;&amp;</span><span class="n">length</span><span class="o">&gt;</span><span class="n">q</span><span class="o">.</span><span class="na">size</span><span class="o">()){</span>
                <span class="n">length</span><span class="o">=</span><span class="n">q</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
                <span class="n">start</span><span class="o">=</span><span class="n">startPoint</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">answer</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[]{</span><span class="n">start</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span><span class="n">start</span><span class="o">+</span><span class="n">length</span><span class="o">};</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
:ET