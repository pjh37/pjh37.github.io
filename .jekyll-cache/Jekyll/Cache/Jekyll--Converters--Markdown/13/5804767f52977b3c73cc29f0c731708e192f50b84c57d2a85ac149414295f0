I"'<h1 id="http-get-post-차이">HTTP GET POST 차이</h1>

<p><br /></p>

<h2 id="http">HTTP</h2>
<h3 id="http는-웹상에서-클라이언트와-서버간에-요청응답으로-데이터를-주고-받을-수-있는-프로토콜이다">HTTP는 웹상에서 클라이언트와 서버간에 요청/응답으로 데이터를 주고 받을 수 있는 프로토콜이다.</h3>

<p><br /></p>

<h1 id="get-방식">GET 방식</h1>
<h3 id="get방식은-주로-조회기능에-사용된다-client가-server에-어떤-데이터를-요청할때-사용한다-데이터를-url에-포함시켜-전송하기-때문에-보안성이-낮으며-주로-간단한-데이터-조회에-사용된다">GET방식은 주로 조회기능에 사용된다. Client가 Server에 어떤 데이터를 요청할때 사용한다. 데이터를 URL에 포함시켜 전송하기 때문에 보안성이 낮으며 주로 간단한 데이터 조회에 사용된다.</h3>
<ul>
  <li>
    <h3 id="url에-데이터를-포함하여-요청">URL에 데이터를 포함하여 요청</h3>
  </li>
  <li>
    <h3 id="url에-데이터가-노출되어-보안이-낮다">URL에 데이터가 노출되어 보안이 낮다.</h3>
  </li>
  <li>
    <h3 id="캐싱-가능">캐싱 가능</h3>
  </li>
</ul>

<p><br /></p>

<h1 id="post-방식">POST 방식</h1>
<h3 id="post방식은-주로-서버의-리소스를-추가하거나-변경할때-사용한다-데이터를-body로-감싸서-보내기-때문에-보안성이-좋으며-객체-값도-전송이-가능하다">POST방식은 주로 서버의 리소스를 추가하거나 변경할때 사용한다. 데이터를 body로 감싸서 보내기 때문에 보안성이 좋으며 객체 값도 전송이 가능하다.</h3>
<ul>
  <li>
    <h3 id="url에-데이터를-노출하지-않아서-보안성이-get방식보다-좋다">URL에 데이터를 노출하지 않아서 보안성이 get방식보다 좋다.</h3>
  </li>
  <li>
    <h3 id="데이터를-body에-포함하여-전송">데이터를 Body에 포함하여 전송</h3>
  </li>
  <li>
    <h3 id="캐싱불가">캐싱불가</h3>
  </li>
</ul>
:ET