I"<h2 id="트랜잭션이란">트랜잭션이란?</h2>

<p><br /></p>
<h3 id="트랜잭션은-작업의-완전성을-보장한다">트랜잭션은 작업의 완전성을 보장한다.</h3>
<h3 id="논리적인-작업-셋을-모두-완벽하게-처리하지-못할-경우-원상태로-복구해서-작업의-일부만">논리적인 작업 셋을 모두 완벽하게 처리하지 못할 경우 원상태로 복구해서 작업의 일부만</h3>
<h3 id="적용되는-현상이-발생하지-않게-만들어주는-기능이다-사용자의-입장에서는-작업의-논리적-단위로서">적용되는 현상이 발생하지 않게 만들어주는 기능이다. 사용자의 입장에서는 작업의 논리적 단위로서</h3>
<h3 id="이해할-수-있고-시스템-입장에서는-데이터들을-접근-또는-변경하는-프로그램의-단위가-된다">이해할 수 있고 시스템 입장에서는 데이터들을 접근 또는 변경하는 프로그램의 단위가 된다.</h3>
<p><br /></p>
<h3 id="예시-통장에-10000원이-있었다-여기서-한-트랜잭션을-날려보자">예시) 통장에 10000원이 있었다. 여기서 한 트랜잭션을 날려보자</h3>
<h3 id="1-5000입급update">1. 5000입급(update)</h3>
<h3 id="2-10000원-출금update">2. 10000원 출금(update)</h3>
<h3 id="3-잔액조회select">3. 잔액조회(select)</h3>
<h3 id="3개의-쿼리가-한-트랜잭션으로-수행-될때-2번에서-오류가-생긴다면-앞에서-작업했던-1번-쿼리가-롤백되어">3개의 쿼리가 한 트랜잭션으로 수행 될때 2번에서 오류가 생긴다면 앞에서 작업했던 1번 쿼리가 롤백되어</h3>
<h3 id="실행되기-전으로-돌아간다">실행되기 전으로 돌아간다</h3>
<p><br /></p>

<h2 id="트랜잭션과-lock-차이">트랜잭션과 Lock 차이</h2>
<h3 id="lock은-동시성을-제어하기-위한-기능이고-트랜잭션은-데이터의-정합성을-보장하기-위한-기능이다">Lock은 동시성을 제어하기 위한 기능이고 트랜잭션은 데이터의 정합성을 보장하기 위한 기능이다</h3>
<h3 id="lock은-여러-커넥션에서-동시에-동일한-자원을-요청할-경우-순서대로-한-시점에-하나의-커넥션만">Lock은 여러 커넥션에서 동시에 동일한 자원을 요청할 경우 순서대로 한 시점에 하나의 커넥션만</h3>
<h3 id="변경할-수-있게-해준다">변경할 수 있게 해준다.</h3>
<h3 id="이와달리-트랜잭션은-논리적셋n개의-쿼리이-모두-적용되거나-아무것도-적용되지-않아야-함을-보장하는-것이다">이와달리 트랜잭션은 논리적셋(n개의 쿼리)이 모두 적용되거나 아무것도 적용되지 않아야 함을 보장하는 것이다.</h3>
<p><br /></p>
<h2 id="트랜잭션의-특성acid">트랜잭션의 특성(ACID)</h2>
<h3 id="원자성atomicity">원자성(Atomicity)</h3>
<h3 id="만약-트랜잭션-중간에-어떤-문제가-발생한다면-트랜잭션에-해당하는-어떤-작업-내용도-수행되어서는-안되며-문제가-없을-경우에만-모든작업이-수행되어야한다">만약 트랜잭션 중간에 어떤 문제가 발생한다면 트랜잭션에 해당하는 어떤 작업 내용도 수행되어서는 안되며 문제가 없을 경우에만 모든작업이 수행되어야한다.</h3>
<p><br /></p>
<h3 id="일관성consistency">일관성(Consistency)</h3>
<h3 id="트랜잭션이-완료된-다음도-트랜잭션이-일어나기전과-동일하게-데이터의-일관성을-보장해야한다">트랜잭션이 완료된 다음도 트랜잭션이 일어나기전과 동일하게 데이터의 일관성을 보장해야한다.</h3>

<p><br /></p>

<h3 id="고립성isolation">고립성(Isolation)</h3>
<h3 id="각각의-트랜잭션은-서로-간섭없이-독립적으로-수행되어야-한다">각각의 트랜잭션은 서로 간섭없이 독립적으로 수행되어야 한다.</h3>

<p><br /></p>

<h3 id="지속성durability">지속성(Durability)</h3>
<h3 id="트랜잭션이-정상적으로-종료된-다음에는-영구적으로-데이터베이스에-작업의-결과가-저장되어야-한다">트랜잭션이 정상적으로 종료된 다음에는 영구적으로 데이터베이스에 작업의 결과가 저장되어야 한다.</h3>

<h2 id="추가-자료">추가 자료</h2>
<h2 id="statement-vs-preparedstatement">Statement vs PreparedStatement</h2>
<h3 id="preparedstatement는-쿼리를-수행하기전에-이미-쿼리가-컴파일-되어-있으며-반복-수행에-경우">PreparedStatement는 쿼리를 수행하기전에 이미 쿼리가 컴파일 되어 있으며 반복 수행에 경우</h3>
<h3 id="프리-컴파일-된-쿼리를-통해-수행하기-때문에-statement보다-속도가-빠르다">프리 컴파일 된 쿼리를 통해 수행하기 때문에 Statement보다 속도가 빠르다.</h3>
<h3 id="preparedstatement은--sql-injection공격등의-문제를-보완할-수-있기-때문에--preparedstatement사용이-권장된다">PreparedStatement은  SQL injection공격등의 문제를 보완할 수 있기 때문에 ### PreparedStatement사용이 권장된다.</h3>
:ET