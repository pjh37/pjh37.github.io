I"<h1 id="stack-원리와-구현">Stack 원리와 구현</h1>

<hr />
<h2 id="stack-원리">Stack 원리</h2>
<h3 id="--먼저들어간-데이터가-나중에-나온다-재귀-함수의-원리와-같다">- 먼저들어간 데이터가 나중에 나온다 (재귀 함수의 원리와 같다)</h3>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Stack</span><span class="p">{</span>
<span class="nl">private:</span>
    <span class="k">struct</span> <span class="nc">Node</span><span class="p">{</span>
        <span class="kt">int</span> <span class="n">data</span><span class="p">;</span>
        <span class="n">Node</span><span class="o">*</span> <span class="n">next</span><span class="p">;</span>
    <span class="p">};</span>
    <span class="n">Node</span><span class="o">*</span> <span class="n">top</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">count</span><span class="p">;</span>
<span class="nl">public:</span>
    <span class="n">Stack</span><span class="p">()</span><span class="o">:</span><span class="n">count</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="n">top</span><span class="p">(</span><span class="nb">nullptr</span><span class="p">){}</span>

    <span class="kt">void</span> <span class="n">push</span><span class="p">(</span><span class="kt">int</span> <span class="n">data</span><span class="p">){</span>
        <span class="n">Node</span><span class="o">*</span> <span class="n">node</span><span class="o">=</span><span class="k">new</span> <span class="n">Node</span><span class="p">();</span>
        <span class="n">node</span><span class="o">-&gt;</span><span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">;</span>
        <span class="n">node</span><span class="o">-&gt;</span><span class="n">next</span><span class="o">=</span><span class="n">top</span><span class="p">;</span>
        <span class="n">top</span><span class="o">=</span><span class="n">node</span><span class="p">;</span>
        <span class="n">count</span><span class="o">++</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="kt">void</span> <span class="n">pop</span><span class="p">(){</span>
        <span class="k">if</span><span class="p">(</span><span class="n">isEmpty</span><span class="p">())</span><span class="k">return</span><span class="p">;</span>
        <span class="n">Node</span><span class="o">*</span> <span class="n">node</span><span class="o">=</span><span class="n">top</span><span class="p">;</span>
        <span class="n">top</span><span class="o">=</span><span class="n">node</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
        <span class="k">delete</span> <span class="n">node</span><span class="p">;</span>
        <span class="n">count</span><span class="o">--</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="kt">int</span> <span class="n">mTop</span><span class="p">(){</span>
        <span class="k">return</span> <span class="n">top</span><span class="o">-&gt;</span><span class="n">data</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="kt">bool</span> <span class="n">isEmpty</span><span class="p">(){</span>
        <span class="k">return</span> <span class="n">count</span><span class="o">==</span><span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
    <span class="n">Stack</span><span class="o">*</span> <span class="n">st</span><span class="o">=</span><span class="k">new</span> <span class="n">Stack</span><span class="p">();</span>
    <span class="n">st</span><span class="o">-&gt;</span><span class="n">push</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
    <span class="n">st</span><span class="o">-&gt;</span><span class="n">push</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
    <span class="n">st</span><span class="o">-&gt;</span><span class="n">push</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span>
<span class="p">}</span>

</code></pre></div></div>
<h4 id="결과">결과</h4>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">3</span> <span class="mi">2</span> <span class="mi">1</span>

</code></pre></div></div>
:ET